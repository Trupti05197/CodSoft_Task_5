# -*- coding: utf-8 -*-
"""Task_5_CREDIT CARD FRAUD DETECTION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uLNWvX6iUNXjJEa3F4ByqgYU6_hHlNZ4
"""

#Import libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score
from imblearn.over_sampling import SMOTE
from imblearn.pipeline import Pipeline

df=pd.read_csv('/content/drive/MyDrive/CodSoft_Internship/creditcard.csv') #Read and load data:

df.head()  # Print first five columns

df.info()

df.isnull().sum()  #Check Missing values

df.describe() # print summary statistics

# Split the data into train and test sets
X = df.drop(columns=['Class'], axis = 1)
y = df['Class']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Handle class imbalance using SMOTE
smote = SMOTE(sampling_strategy='minority', random_state=42)
X_resampled, y_resampled = smote.fit_resample(X_scaled, y)

X_train, X_test, y_train, y_test = train_test_split(X_resampled, y_resampled, test_size=0.3, random_state=42)

#Train a Random Forest Classifier
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# prediction:
y_pred = rf_model.predict(X_test)

print("Classification Report:")
print(classification_report(y_test, y_pred))

print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

